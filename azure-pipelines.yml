# ASP.NET
# Build and test ASP.NET projects.
# Add steps that publish symbols, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/aspnet/build-aspnet-4

trigger:
- master
- staging
- development

pool:
#  vmImage: 'windows-latest'
  vmImage: 'windows-2019'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# - task: SonarQubePrepare@5
#   condition: always() # https://learn.microsoft.com/en-us/training/modules/create-multi-stage-pipeline/2-design-the-pipeline
#   inputs:
#     SonarQube: 'Sonarqube in BOM region'
#     scannerMode: 'MSBuild'
#     projectKey: 'DotNetMVC_DotNetMVC_AYPFUrsPJOZyeOAFUkZI'
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
#- task: SonarQubeAnalyze@5
#  condition: always() # run even if Sonarqube server timeout
# - task: SonarQubePublish@5
#   condition: always() # run even if Sonarqube server timeout
#   inputs:
#     pollingTimeoutSec: '300'
- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    PathtoPublish: $(build.artifactstagingdirectory)
    ArtifactName: 'PublishBuildArtifacts'