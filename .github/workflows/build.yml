name: Build Web App
 
on: [push]
env:
  PROJECT_NAME: "github-cicd-demo"
  PROJECT_SOLUTION: "PhonebookMVC.sln"
  CONF_CONFIGURATION: "Release"
  ARTIFACTROOT: "D:\\"
  DEPLOYMENT_APP_NAME: "test-dr-cicd-phonebook"
  DEPLOYMENT_CONFIG_NAME: "CodeDeployDefault.OneAtATime"
  DEPLOYMENT_GROUP_NAME: "Github-CICD"
  ENVI: "dev"
  BUCKET_NAME : "phc-dev-github-action-deploy"
  AWS_REGION : "us-west-2"
  AWS_ROLE: "arn:aws:iam::856623153676:role/github-action-deploy-dev"
# Required to get the ID Token that will be used for OIDC. Ref https://www.eliasbrange.dev/posts/secure-aws-deploys-from-github-actions-with-oidc/
permissions:
  id-token: write
  
 
jobs:
  build:
 
    runs-on: windows-latest
 
    steps:
    - uses: actions/checkout@v1
      name: Checkout Code
      
    - name: Create build artifact directory
      run: |
        md ${{ env.ARTIFACTROOT }}${{ env.PROJECT_NAME }}\\web
        ls ${{ env.ARTIFACTROOT }}
          
    - name: Setup MSBuild Path
      uses: warrenbuckley/Setup-MSBuild@v1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
       
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1
      env:
        ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
      
     
    - name: Restore NuGet Packages
      run: nuget restore ${{ env.PROJECT_SOLUTION }}
 
    - name: Build and Publish Web App
      run: msbuild ${{ env.PROJECT_SOLUTION }} /p:Configuration=${{ env.CONF_CONFIGURATION }} /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish  /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True  /p:publishUrl=${{ env.ARTIFACTROOT }}${{ env.PROJECT_NAME }}\\web

#aws-actions/configure-aws-credentials@v3 is a publically available github actions
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v3
##https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/configuring-openid-connect-in-amazon-web-services      
      with:
          role-to-assume: ${{ env.AWS_ROLE }}
          role-session-name: GitHub-Action-Role
          aws-region: ${{ env.AWS_REGION }}
          # Upload a file to AWS s3
    - name:  Display build output
      run: |
       echo "ls root folder"
       ls ${{ env.ARTIFACTROOT }}
       echo "ls artifact dir"
       ls ${{ env.ARTIFACTROOT }}\\${{ env.PROJECT_NAME }}\\web
      # aws s3 cp bin\Release\Publish\* s3://${{ env.BUCKET_NAME }}/test
    
    - name: Copy AppSec file to the artifact
      run: |
         cp appspec.yml ${{ env.ARTIFACTROOT }}\\${{ env.PROJECT_NAME }}
         ls ${{ env.ARTIFACTROOT }}\\${{ env.PROJECT_NAME }}
          
    - name:  AWS Deploy Push
      run: |
         aws deploy push --source ${{ env.ARTIFACTROOT }}${{ env.PROJECT_NAME }} --application-name ${{ env.DEPLOYMENT_APP_NAME }} --region ${{ env.AWS_REGION }} --s3-location s3://${{ env.BUCKET_NAME }}/artifacts/${{ env.ENVI }}/${{ env.PROJECT_NAME }}/${GITHUB_RUN_NUMBER}_${GITHUB_SHA}.zip --ignore-hidden-files
     #  aws s3 cp -r PhonebookMVC\bin\Release\Publish s3://${{ env.BUCKET_NAME }}/test
    - name: AWS DEPLOY CREATE DEPLOYMENT
      run: |
         aws deploy create-deployment --region ${{ env.AWS_REGION }} --application-name ${{ env.DEPLOYMENT_APP_NAME  }} --deployment-config-name ${{ env.DEPLOYMENT_CONFIG_NAME }} --description build_num_${{ env.BUILD_NUMBER }} --deployment-group-name ${{ env.DEPLOYMENT_GROUP_NAME }} --s3-location  bucket=${{ env.BUCKET_NAME }},bundleType=zip,key=artifacts/${{ env.ENVI }}/${{ env.PROJECT_NAME }}/${GITHUB_RUN_NUMBER}_${GITHUB_SHA}.zip